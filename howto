# Education Analytics Dashboard — Quick Start Guide

Welcome to the **Education Analytics Dashboard**! This guide will walk you through every step of installing, running, and using the dashboard—even if you’ve never used Python or Streamlit before.

---

## 📋 Prerequisites

Before you begin, make sure your computer meets these requirements:

1. **Operating System**  
   - Windows 10 or later, macOS 10.14 or later, or a recent Linux distribution.

2. **Administrator / Install Permissions**  
   - You’ll need permission to install software on your machine. Also, check with your IT point person to see if the required Python and other software packages are already installed on your laptop/computer/machine thing. :)

3. **Internet Connection**  
   - For downloading required software and Python packages.

4. **Your Sanity**
   - Please budget uninterrupted time for your sanity. Take breaks, walk away, drink water/tea, stretch, Love yourself. Don't hit the computer and try to herd cats while setting this up. After the setup is done, celebrate! It'll be much easier for you to find those critical students that need interventions. Hang in there! You got this. 

---

## 1. Install Python

This dashboard is built with and uses Python (version 3.13). If you don’t already have it:

1.1 Windows
Option A – Microsoft Store (recommended!)

Open the Microsoft Store app.
Search for “Python 3” and select the latest release (3.13.x).
Click Install. – This method auto-configures your PATH so you can run python from any Command Prompt.

Option B – python.org installer

In your web browser, go to https://www.python.org/downloads/ (the “Downloads” page).
Click Download Python 3.13.x for Windows.
Run the downloaded installer:
* SUPER Important: Check “Add Python 3.13 to PATH” at the bottom of the installer window.
* Click Install Now and follow prompts.

Verify installation:

Open Command Prompt (press Windows + R, type cmd, Enter).

Type or copy and paste the simple line of code below:
python --version
* You should see Python 3.13.x. There are SEVERAL versions of Python. Be SURE-SURE that you have one of the 3.13._ versions. They don't play nice with each-other all the time.

1.2 macOS
In your web browser, visit https://www.python.org/downloads/ and click Download Python 3.13.x for macOS.

Open the downloaded .pkg file and follow the installer steps.

Verify installation:
Open Terminal (Finder → Applications → Utilities → Terminal).

Type or copy and paste the simple line of code below:

python3 --version
* You should see Python 3.13.x. There are SEVERAL versions of Python. Be SURE-SURE that you have one of the 3.13._ versions. They don't play nice with each-other all the time.

1.3 Linux (Ubuntu/Debian example)
Open a Terminal window.

Update package lists and install Python plus virtual-env support:

bash
sudo apt update
sudo apt install python3 python3-venv python3-pip
Verify installation:

bash
python3 --version
You should see Python 3.13.x.

2. Create a Project Folder
Choose or create a folder where all dashboard files will live. For example:
(copy and paste the simple line of code below. make directory --> mkdir, change directory --> cd)
mkdir education-dashboard
cd education-dashboard

3. Set Up a Virtual Environment
A virtual environment keeps this project’s Python packages separate from other projects on your computer. Virtual Environment --> venv

In your project folder, run:
(copy and paste the simple line of code below)
python -m venv venv

Activate the environment:

For Windows:
(copy and paste the simple line of code below)
venv\Scripts\activate

For Mac/Linux:
(copy and paste the simple line of code below)
source venv/bin/activate

Your prompt should now show (venv) at the beginning—this means you’re inside the environment.

4. Install Required Packages
With the virtual environment active, install the libraries the dashboard needs:
(copy and paste the simple line of code below)
pip install pandas numpy seaborn matplotlib streamlit

* pandas and numpy handle data.
* seaborn and matplotlib create charts.
* streamlit powers the interactive dashboard.

5. Prepare the Data File
The dashboard expects a CSV file at data/student_performance.csv. To get started:

Create a folder named "data" in your project folder:
(copy and paste the simple line of code below)
mkdir data

Option A: Use the provided sample

* If your repo includes a sample CSV (e.g. student_performance_sample.csv), copy it:
(copy and paste the simple line of code below)

cp student_performance_sample.csv data/student_performance.csv

Option B: Create your own

* Open Excel or Google Sheets and enter columns like:

student_id, grade, section, test_date, test_score, attendance_rate, ...  

* Save or export as CSV named student_performance.csv into the data folder.

6. Run the Dashboard
With everything in place, start the dashboard:
(copy and paste the simple line of code below)
streamlit run app.py

* Streamlit will open a new browser tab (or show a local URL) like http://localhost:8501.
* Leave this terminal window open while you work with the dashboard.

7. Using the Dashboard
Overview Page

* Displays summary statistics (average scores, attendance rates).
* Use dropdowns to filter by grade or section.

Trend Analysis

* Line charts show how scores change over time.
* Hover over points to see exact values.

At-Risk Indicators

* See which students fall below key thresholds (e.g., < 60% score).
* The dashboard will list “students at risk” with their details.

Customization Tips

* Use the sidebar controls to adjust date ranges or score cutoffs.
* Click “Download Data” (if available) to export filtered results as CSV.

8. Troubleshooting
Issue --> Solution
Streamlit command not found --> Make sure your virtual environment is active: source venv/bin/activate or venv\Scripts\activate.
“ModuleNotFoundError” on import --> Re-run pip install ... to ensure all libraries are installed in the active venv.
Dashboard doesn’t update after changes --> Save your changes to app.py and refresh the browser tab.
Data file errors (e.g. missing columns) --> Open data/student_performance.csv in a text editor and confirm headers match what app.py expects.

9. Next Steps & Customization
* Add New Charts: Copy the pattern in app.py to build bar charts, scatter plots, etc.
* Connect Real Data: Later on, replace the simulated CSV with your school’s anonymized data.
* Share with Colleagues: You can deploy this dashboard to Streamlit Cloud or another hosting service—so others can access it online.

🎉 You’re all set! If you run into any problems, please open an issue in this repository or reach out for help. Happy teaching and data exploring!
